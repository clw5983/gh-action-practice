name: Using Reusable Workflow
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: Ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          # path: ~/.npm
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      # If the node_modules folder is cached, it's not necessary to run "npm ci"
      # Skipping this steps will skip all the setup work realted to that step
      # and skip the part where npm internally checks whether it has its cache folder 
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: Ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Test code
        id: run-tests # for the reference of next step's if statement
        run: npm run test
      - name: Upload test report
        # add 'failure()' to prevent GitHub Actions ignoring this step
        # because it still has its default behavior of not executing any other steps after this failing step
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: Ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          # path: ~/.npm
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      # If the node_modules folder is cached, it's not necessary to run "npm ci"
      # Skipping this steps will skip all the setup work realted to that step
      # and skip the part where npm internally checks whether it has its cache folder 
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml
    # runs-on: ubuntu-latest
    # steps:
    #   - name: Get build artifacts
    #     uses: actions/download-artifact@v3
    #     with:
    #       name: dist-files
    #   - name: Output contents
    #     run: ls
    #   - name: Deploy
    #     run: echo "Deploying..."
    with:
      artifact-name: dist-files
    # secrets:
      # some-secret: ${{ secrets.some-secret }}
  print-deploy-result:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Print deploy output
        run: echo "${{ needs.deploy.outputs.result }}"
  report:
      # as the "report" job is running // by default, 
      # the "needs" is required for evaluation of condition
      needs: [lint, deploy]
      if: failure()
      runs-on: ubuntu-latest
      steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ github }}"
