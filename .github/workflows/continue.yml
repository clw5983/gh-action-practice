name: Continue On Error
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: Ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          # path: ~/.npm
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      # If the node_modules folder is cached, it's not necessary to run "npm ci"
      # Skipping this steps will skip all the setup work realted to that step
      # and skip the part where npm internally checks whether it has its cache folder 
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: Ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Test code
        continue-on-error: true
        id: run-tests # for the reference of next step's if statement
        run: npm run test
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: Ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          # path: ~/.npm
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      # If the node_modules folder is cached, it's not necessary to run "npm ci"
      # Skipping this steps will skip all the setup work realted to that step
      # and skip the part where npm internally checks whether it has its cache folder 
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
  report:
      # as the "report" job is running // by default, 
      # the "needs" is required for evaluation of condition
      needs: [lint, deploy]
      if: failure()
      runs-on: ubuntu-latest
      steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ github }}"
