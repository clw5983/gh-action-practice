# name of action
name: "Get & Cache Dependencies"

# no `on` key for custom actions because actions are not workflows
# and do not need a trigger
# Instead, they are used as part of workflows

# This description of our action will be shown in the marketplace if we publish our action
description: "Get the dependencies (via npm) and cache them."
# inputs:
#   caching:
#     description: 'Whether to cache dependencies or not.'
#     required: false
#     default: 'true'
# outputs:
#   used-cache:
#     description: 'Whether the cache was used.'
#     value: ${{ steps.install.outputs.cache }}

runs:
  using: "composite" # it must be set to "composite" and no other choices
  steps:
    - name: Cache dependencies
      # if: inputs.caching == 'true'
      id: cache
      # other actions can be used in your own action
      uses: actions/cache@v3
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: deps-node-modules-
        enableCrossOSArchive: true
    - name: Install dependencies
      id: install
      # if cache is missed || we don't want to use caching, then this step should also execute
      # if: steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true'
      # run: |
      #   npm ci
      #   echo "cache='${{ inputs.caching }}'" >> $GITHUB_OUTPUT
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci
      # shell is a speical key that must be added if you're using the run key
      # it specifies which shell should be used for executing the step
      shell: bash 
